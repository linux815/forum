<?phpinclude_once('include/class_base.php');include_once('include/class_database.php');include_once('include/class_user.php');//// Контроллер страницы редактирования.//class C_AddMessage extends C_Base{	private $header;  // заголовок	private $post_text;	// текст	private $titl;	private $text;	private $error;	// сообщение об ошибке	private $name;	private $res;		//	// Конструктор.	//	function __construct()	{			}		//	// Виртуальный обработчик запроса.	//	protected function OnInput()	{		parent::OnInput();				$database = new Database();				$this->title = $this->title . ' :: Отправка сообщения';				// Менеджеры.		$mUsers = M_Users::Instance();				// Очистка старых сессий.		$mUsers->ClearSessions();				// Текущий пользователь.		$this->user = $mUsers->Get();				if (isset($_POST['submitForm']))		{			$post_text = $_POST['text'];			$name = $_POST['otv'];			$id_user_send = $this->user['id_user'];			$title = $_POST['theme'];			$send_count = 1;			$take_count = 0;						// удачная отправка формы			$mUsers->message_insert($id_user_send, $name, $post_text, $title, $send_count, $take_count);						header('Location: index.php');			die();				}		else		{					// запрос формы			$id_posts = $_GET['post'];			$this->res = $mUsers->Loging($this->user['id_user']);		}	}		//	// Виртуальный генератор HTML.	//		protected function OnOutput()	{		$vars = array('header' => $this->header, 'post_text' => $this->post_text, 'id_thread' => $this->id_threads, 'name' => $this->name, 'res' => $this->res);			$this->content = $this->Template('templates/v_addmessage.php', $vars);		parent::OnOutput();	}	}